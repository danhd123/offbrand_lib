#!/bin/bash

HEADER_TEMPLATE=scripts/templates/PublicHeader.h
RESTRICTED_TEMPLATE=scripts/templates/PrivateHeader.h
SOURCE_TEMPLATE=scripts/templates/Source.c
TEST_TEMPLATE=scripts/templates/Test.c

function print_usage() {
  echo "Usage:"
  echo "$(basename $0) [class name]"
  echo
  echo "Script generates new files for a OffBrand compatible class with the"
  echo "specified name. All code required for reference counting and inclusion"
  echo "in OffBrand container structures is in place. The user must add"
  echo "relevant thread safety procedures and functionallity specific to the"
  echo "class created."
  echo
  echo "[class name] should not have any file extensions"
  echo
  echo "See doc directory for more information on OffBrand library"
}

#check usage
if [[ $# -ne 1 ]]
then
  print_usage
  exit 1
fi

if [[ $1 == "-h" ]] || [[ $1 == "--help" ]]
then
  print_usage
  exit 0
fi

#Generate substitution strings
codeClassName=$1
macroClassName=$(echo $1 | tr '[a-z]' '[A-Z]') #capitalize class name

#filenames
publicHeader=$codeClassName".h"
privateHeader=$codeClassName"_Private.h"
sourceFile=$codeClassName".c"
testFile=$codeClassName"_test.c"

#substitute class name into template files and write files with proper file
#names to the current directory
cat $HEADER_TEMPLATE | sed "s/%CODECLASSNAME%/$codeClassName/g" | \
  sed "s/%MACROCLASSNAME%/$macroClassName/g" > $publicHeader
echo "$publicHeader created"

cat $RESTRICTED_TEMPLATE | sed "s/%CODECLASSNAME%/$codeClassName/g" | \
  sed "s/%MACROCLASSNAME%/$macroClassName/g" > $privateHeader
echo "$privateHeader created"

cat $SOURCE_TEMPLATE | sed "s/%CODECLASSNAME%/$codeClassName/g" | \
  sed "s/%MACROCLASSNAME%/$macroClassName/g" > $sourceFile
echo "$sourceFile created"

cat $TEST_TEMPLATE | sed "s/%CODECLASSNAME%/$codeClassName/g" | \
  sed "s/%MACROCLASSNAME%/$macroClassName/g" > $testFile
echo "$testFile created"

echo ""
echo "New class created, ready for editing"
